name: Build container images

on:
  push:
    branches:
      - master
      - SOFTWARE-4832
  repository_dispatch:
    types:
      - dispatch-build
  workflow_dispatch:

jobs:
  make-date-tag:
    runs-on: ubuntu-latest
    if: startsWith(github.repository, 'yongleyuan/')
    outputs:
      dtag: ${{ steps.mkdatetag.outputs.dtag }}
    steps:
    - name: make date tag
      id: mkdatetag
      run: echo "::set-output name=dtag::$(date +%Y%m%d-%H%M)"

  build:
    runs-on: ubuntu-latest
    needs: [make-date-tag]
    if: startsWith(github.repository, 'yongleyuan/')
    strategy:
      fail-fast: False
      matrix:
        repo: ['development', 'testing', 'release']
        registries:
          - name: OSG Harbor
            url: hub.opensciencegrid.org
            username: OSG_HARBOR_ROBOT_USER
            password: OSG_HARBOR_ROBOT_PASSWORD
          - name: Docker Hub
            url: docker.io
            username: DOCKER_USERNAME
            password: DOCKER_PASSWORD

    steps:

    - uses: actions/checkout@v2

    - id: generate-tag-list
      env:
        REPO: ${{ matrix.repo }}
        TIMESTAMP: ${{ needs.make-date-tag.outputs.dtag }}
      run: |
        docker_repo=${GITHUB_REPOSITORY/opensciencegrid\/docker-/opensciencegrid/}
        tag_list=()
        for registry in hub.opensciencegrid.org docker.io; do
          for image_tag in "$REPO" "$REPO-$TIMESTAMP"; do
            tag_list+=("$registry/$docker_repo":"$image_tag")
          done
        done
        IFS=,
        echo $tag_list
        echo "::set-output name=taglist::${tag_list[*]}"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to ${{ matrix.registries.name }}
      uses: docker/login-action@v1
      with:
        registry: ${{ matrix.registry.url }}
        username: ${{ secrets[matrix.registries.username] }}
        password: ${{ secrets[matrix.registries.password] }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.2.0
      with:
        push: true
        build-args: BASE_YUM_REPO=${{ matrix.repo }}
        tags: "${{ steps.generate-tag-list.outputs.taglist }}"
